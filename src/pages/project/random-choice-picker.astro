---
import Layout from '../../layouts/Layout.astro';
---

<style is:inline>
    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Roboto', sans-serif;
        display: flex; /*used since most projects are centered*/
        margin: 0;
        height: 100vh; /*to make the height same as the the current whole browser size*/
        overflow: hidden; /*to avoid scrollbars*/
        justify-content: center;
        align-items: center;
        background: linear-gradient(90deg, #360033, #0b8793);
        flex-direction: column;
        color: #fff;
    }

    h2,
    h3 {
        text-align: center;
    }

    .container {
        width: min(500px, 90%);
    }

    textarea {
        width: 100%;
        height: 100px;
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        padding: 10px;
        font-size: 1.2rem;
        margin-bottom: 20px;
        font-size: 16px;
    }

    .tag {
        display: inline-block;
        background: #f78e35;
        padding: 1em 2em;
        border-radius: 50px;
        margin: 5px;
        font-size: 12px;
        font-weight: 700;
        cursor: pointer;
        color: #fff;
    }

    .tag.highlight {
        background: #273c75;
    }

    .buttons {
        display: flex;
        margin-top: 20px;
        gap: 20px;
        margin-bottom: 50px;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background: #273c75;
        color: #fff;
        font-size: 16px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn.clear {
        background: #f78e35;
    }
</style>

<link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css"
    integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
/>

<Layout title="Random Choice Picker">
    <div class="container">
        <h2>Random Choice Picker</h2>
        <h3>Enter all of the choices divided by a comma (",")</h3>
        <textarea name="choices"></textarea>

        <div class="buttons">
            <button class="btn pick" id="pick">Pick</button>
            <button class="btn clear" id="clear">Clear</button>
        </div>

        <h3>Choices</h3>
        <div class="tags"></div>
    </div>
</Layout>

<script is:inline>
    const tagsDiv = document.querySelector('.tags');
    const textarea = document.querySelector('textarea');
    3;
    const pickBtn = document.querySelector('.btn.pick');
    const clearBtn = document.querySelector('.btn.clear');

    textarea.focus();

    const createTags = (input) => {
        const tags = input
            .split(',')
            .filter((tag) => tag.trim() !== '')
            .map((tag) => tag.trim());

        tagsDiv.innerHTML = '';
        tags.forEach((tag) => {
            const tagEl = document.createElement('span');
            tagEl.classList.add('tag');
            tagEl.innerText = tag;
            tagsDiv.appendChild(tagEl);
        });
    };

    const pickRandomTag = () => {
        const tags = document.querySelectorAll('.tag');
        return tags[Math.floor(Math.random() * tags.length)];
    };

    const highlightTag = (tag) => {
        tag.classList.add('highlight');
    };

    const unHighlightTag = (tag) => {
        tag.classList.remove('highlight');
    };

    const randomSelect = () => {
        const times = 30;

        const interval = setInterval(() => {
            highlightTag(pickRandomTag());

            setTimeout(() => {
                unHighlightTag(pickRandomTag());
            }, 100);
        }, 100);

        setTimeout(() => {
            clearInterval(interval);
            setTimeout(() => {
                const randomTag = pickRandomTag();
                highlightTag(randomTag);
            }, 100);
        }, times * 100);
    };

    textarea.addEventListener('keyup', (e) => {
        createTags(e.target.value);
    });

    pickBtn.addEventListener('click', () => {
        randomSelect();
    });

    clearBtn.addEventListener('click', () => {
        textarea.value = '';
        createTags('');
    });
</script>
