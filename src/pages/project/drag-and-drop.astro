---
import Layout from '../../layouts/Layout.astro';
---

<style is:global>
    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Roboto', sans-serif;
        display: flex; /*used since most projects are centered*/
        margin: 0;
        height: 100vh; /*to make the height same as the the current whole browser size*/
        justify-content: center;
        align-items: center;
        flex-direction: row;
        color: #222;
        background: #222;
    }

    .empty {
        height: 150px;
        width: 150px;
        margin: 10px;
        border: solid 3px black;
        background: white;
    }

    .fill {
        background-image: url('https://source.unsplash.com/random/150x150');
        height: 145px;
        width: 145px;
        cursor: pointer;
    }

    .hold {
        border: solid 5px #ccc;
    }

    .hovered {
        background-color: #333;
        border-color: white;
        border-style: dashed;
    }

    @media (max-width: 800px) {
        body {
            flex-direction: column;
        }
    }
</style>

<Layout title="Drag and Drop">
    <div class="empty">
        <div class="fill" draggable="true"></div>
    </div>
    <div class="empty"></div>
    <div class="empty"></div>
    <div class="empty"></div>
    <div class="empty"></div>
</Layout>

<script is:inline>
    const fill = document.querySelector('.fill');
    const empties = document.querySelectorAll('.empty');

    fill.addEventListener('dragstart', dragStart);
    fill.addEventListener('dragend', dragEnd);

    for (const empty of empties) {
        empty.addEventListener('dragover', dragOver);
        empty.addEventListener('dragenter', dragEnter);
        empty.addEventListener('dragleave', dragLeave);
        empty.addEventListener('drop', dragDrop);
    }

    function dragStart() {
        this.className += ' hold';
        setTimeout(() => (this.className = 'invisible'), 0);
    }

    function dragEnd() {
        this.className = 'fill';
    }

    function dragOver(e) {
        e.preventDefault();
    }

    function dragEnter(e) {
        e.preventDefault();
        this.className += ' hovered';
    }

    function dragLeave() {
        this.className = 'empty';
    }

    function dragDrop() {
        this.className = 'empty';
        this.append(fill);
    }
</script>
