---
import Layout from '../../layouts/LayoutTailwind.astro'
---

<Layout title="Blurry Loading">
    <section
        class="w-screen h-screen flex flex-row justify-center items-center"
    >
        <div
            class="bg-[url(https://images.unsplash.com/photo-1528164344705-47542687000d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1492&q=80)] bg-no-repeat bg-cover bg-center absolute top-0 left-0 w-screen h-screen z-[1] blur-[0px] js-bg"
        >
        </div>
        <div class="js-loading-text text-7xl z-[3] text-gray-900">0%</div>
    </section>
    <style>
        @import url('https://fonts.googleapis.com/css?family=Ubuntu');
        .loading-text {
            font-size: 70px;
            color: #222;
            z-index: 3;
        }
    </style>

    <script is:inline>
        const bg = document.querySelector('.js-bg')
        const loadingText = document.querySelector('.js-loading-text')

        let load = 0

        /**
         * https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers
         */

        const scale = (number, inMin, inMax, outMin, outMax) => {
            return (
                ((number - inMin) * (outMax - outMin)) / (inMax - inMin) +
                outMin
            )
        }

        const blurring = () => {
            load++
            if (load > 99) {
                clearInterval(interval) /*remove interval once 100 is reached */
            }

            loadingText.innerText = `${load}%`
            loadingText.style.opacity = `${scale(load, 0, 100, 1, 0)}`
            bg.style.filter = `blur(${scale(load, 0, 100, 30, 0)}px)`
        }

        let interval = setInterval(
            blurring,
            20
        ) /*create an interval that runs the function every 30ms */
    </script>
</Layout>
